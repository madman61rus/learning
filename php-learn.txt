Вставка PHP кода :

	Стандартная нотация :

		<?php ... ?>
		<?php ...

	Короткая нотация ( должна быть включена в php.ini) :

		<? ... ?>

	Устаревшая нотация :

		<script language="php">...</script>

	Отключенная в PHP 7 :

		<% ... %>


Вывод текста :

	echo "Hello";

	print "Hello";

	<?= "Hello world" ?>


Комментарии :

	Однострочные

		//
		#

	Многострочные

		/* */


Переменные :

	- Регистрозависимые, имена переменных могутт содержать буквы и цифры и _, но не могут начинаться
	 с цифры

		$myVar;

	Именовать лучше или с подчеркиванием или camelCase:

		$myVarIsEmpty
		$my_var_is_empty


Константы :

	Именуются обязательно в верхнем регистре. Имена регистрозависимые. Использовать константы можно без знака $ впереди.
	Константу нельзя поместить в строку с помощью " {CONSTANT}"

	Первый способ:

		define("имя_константы",значение);

	Второй способ:

		const CONSTANT = 10 ;   // С версии 5.3. Обычно используются в классах. Вне, можно объявлять только в начале файла
	

Типы данных :


	int 		Целые

		Могут описывать десятичные , шестнадцатеричные (0x) , восьмеричные (0) или двоичные (0b)
		Они все время знаковые. Максимальное знаение зависит от платформы. Если число достигает 
		максимума, оно становится чистлом с плавающей точкой.

		$myInt = 1234;
		$myInt = 0b010;
		$myInt = 012376;
		$myInt = 0x1A;


	float 		С плавающей точкой

		Могут хранить числа с плавающей точкой. Может использоваться экспоненциальная нотация

		$myFloat = 1.234;
		$myFloat = 3e23;


	bool 		Булев тип

		$myBool = true ;
		$myBool = false;

	string 		Массив символов




	array 		Collection of values
	object 		User-defined data type
	resource 	External resource
	callable 	Function or method
	null 		Нет значения

		Регистронезависимая константа, служит для обозначения отсутствия значения.

			$myNull = null;

		Она интерпретируется в зависимости от контекста : как булев тип - false,
		как число - 0, как строка - "".


Значение по-умолчанию :

	В PHP все переменные не инициализированные переменные, инициализируются значением null.


Операторы :

	Арифметические :

		$x = 4 - 2;
		$x = 4 + 2;
		$x = 4 * 2;
		$x = 4 / 2; - Деление
		$x = 4 % 2; - Остаток от деления
		$x = 4 ** 2; // 4 в степени 2 ( c 5.6)


	Операции с присваиванием :

		$x += 5;
		$x -= 5;
		$x *= 5;
		$x /= 5;
		$x %= 5;
		$x **= 5 // $x = $x ** 5


	Инкримент и декримент:

		$x++;
		$x--;
		++$x;
		--$x;


	Операторы сравнения:

		$x = (2 == 3)
		$x = (2 != 3)
		$x = (2 <> 3)
		$x = (2 === 3) строгое сравнение (тип и значение)
		$x = (2 !== 3) строгое не равно
		$x = (2 > 3)
		$x = (2 < 3)
		$x = (2 >= 3)
		$x = (2 <= 3)

		C PHP 7:
		$x = 1 <=> 1 ; // 0 (1==1)
		$x = 1 <=> 2 ; // -1 ( 1 < 2)
		$x = 3 <=> 2 ; // 1 ( 3 > 2)

	
	Операторы сравнения:

		&& - И
		|| - ИЛИ
		!  - НЕ

		and - то же, что и &&, но с меньшим приоритетом
		or  - то же, что и ||, но с меньшим приоритетом


	Побитовые операторы:

		&  - и
		|  - или
		^  - xor
		<< - сдвиг влево (умножение)
		>> = сдвиг вправо (деление)	
		~  - инвертация


Строки :

	Строки могут объявляться с помощью :
		- одинарных кавычек
		- двойных кавычек
		- heredoc
		- nowdoc

	Строки в одинарных кавычках переменные не интерполируются. Экранировать '' можно с помощью \


	Конткатенация строк производится с помощью .

